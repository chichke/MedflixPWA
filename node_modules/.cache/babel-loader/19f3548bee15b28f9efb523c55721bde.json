{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Epitech/offline-first-react-app/src/App.js\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport fetchTodos from \"./service/api\";\nconst LOCAL_STORAGE_KEY = \"todo-list\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos().then(result => {\n      setTodos(result);\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    if (todos) {\n      setTodos(todos.map(todo => {\n        if (todo.id === id) {\n          return { ...todo,\n            completed: !todo.completed\n          };\n        }\n\n        return todo;\n      }));\n    }\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      padding: 16\n    },\n    variant: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"React Todo\"), /*#__PURE__*/React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    removeTodo: removeTodo,\n    toggleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Epitech/offline-first-react-app/src/App.js"],"names":["Typography","React","useEffect","useState","TodoForm","TodoList","fetchTodos","LOCAL_STORAGE_KEY","App","todos","setTodos","then","result","localStorage","setItem","JSON","stringify","addTodo","todo","toggleComplete","id","map","completed","removeTodo","filter","padding"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,iBAAiB,GAAG,WAA1B;;AAEA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU,GACLK,IADL,CACUC,MAAM,IAAI;AACZF,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,KAHL;AAKH,GANQ,EAMN,EANM,CAAT;AAQAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACC,OAAb,CAAqBP,iBAArB,EAAwCQ,IAAI,CAACC,SAAL,CAAeP,KAAf,CAAxC;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASQ,OAAT,CAAiBC,IAAjB,EAAuB;AACnBR,IAAAA,QAAQ,CAAC,CAACQ,IAAD,EAAO,GAAGT,KAAV,CAAD,CAAR;AACH;;AAED,WAASU,cAAT,CAAwBC,EAAxB,EAA4B;AACxB,QAAIX,KAAJ,EAAW;AACPC,MAAAA,QAAQ,CACJD,KAAK,CAACY,GAAN,CAAUH,IAAI,IAAI;AACd,YAAIA,IAAI,CAACE,EAAL,KAAYA,EAAhB,EAAoB;AAChB,iBAAO,EACH,GAAGF,IADA;AAEHI,YAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI;AAFd,WAAP;AAIH;;AACD,eAAOJ,IAAP;AACH,OARD,CADI,CAAR;AAWH;AACJ;;AAED,WAASK,UAAT,CAAoBH,EAApB,EAAwB;AACpBV,IAAAA,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAnB;AAAoC,IAAA,OAAO,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAER,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAER,KADX;AAEI,IAAA,UAAU,EAAEc,UAFhB;AAGI,IAAA,cAAc,EAAEJ,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAaH;;AAED,eAAeX,GAAf","sourcesContent":["import Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport fetchTodos from \"./service/api\";\n\nconst LOCAL_STORAGE_KEY = \"todo-list\";\n\nfunction App() {\n    const [todos, setTodos] = useState([]);\n\n    useEffect(() => {\n        fetchTodos()\n            .then(result => {\n                setTodos(result);\n            });\n\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n    }, [todos]);\n\n    function addTodo(todo) {\n        setTodos([todo, ...todos]);\n    }\n\n    function toggleComplete(id) {\n        if (todos) {\n            setTodos(\n                todos.map(todo => {\n                    if (todo.id === id) {\n                        return {\n                            ...todo,\n                            completed: !todo.completed\n                        };\n                    }\n                    return todo;\n                })\n            );\n        }\n    }\n\n    function removeTodo(id) {\n        setTodos(todos.filter(todo => todo.id !== id));\n    }\n\n    return (\n        <div className=\"App\">\n            <Typography style={{ padding: 16 }} variant=\"h1\">\n                React Todo\n            </Typography>\n            <TodoForm addTodo={addTodo} />\n            <TodoList\n                todos={todos}\n                removeTodo={removeTodo}\n                toggleComplete={toggleComplete}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}